rm(list=ls())
source("H:/My Drive/learning/20230220_BayesianStatistics/20230504_BayesianDogsBook/BayesianExercises/MultLinReg_JAGS_18.2.R", echo=TRUE)
########
# B,
data
########
# B,
head(data)
jagMod_x1= jags.model(file= textConnection(modStr),data=dataList_x1,n.chains=3)
dataList_x1= list(
x=data[,1],
y=data[,3],
Ntotal= dim(data)[1],
Npred= 1
)
jagMod_x1= jags.model(file= textConnection(modStr),data=dataList_x1,n.chains=3)
x=data[,1]
dim(x)
x=data.frame(data[,1])
dim(x)
dataList_x1= list(
x=data.frame(data[,1]),   #needs to be data.frame, even if only one column
y=data[,3],
Ntotal= dim(data)[1],
Npred= 1
)
jagMod_x1= jags.model(file= textConnection(modStr),data=dataList_x1,n.chains=3)
cS_x1= coda.samples(model=jagMod_x1,variable.names=c('beta0','beta','sigma','nu'),n.iter=10000)
DF1_x1= data.frame(cS_x1[[1]])
DF2_x1= data.frame(cS_x1[[2]])
DF3_x1= data.frame(cS_x1[[3]])
colnames(DF1_x1)
for(i in 1:dim(DF1_x1)[2]){
plot(DF1[,i],type='l')
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
}
for(i in 1:dim(DF1_x1)[2]){
plot(DF1[,i],type='l',ylab=colnames(DF1)[1])
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
}
for(i in 1:dim(DF1_x1)[2]){
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],main=colnames(DF1)[i])
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
}
for(i in 1:dim(DF1_x1)[2]){
plot(DF1_x1[,i],type='l',ylab=colnames(DF1)[i],main=colnames(DF1)[i])
lines(DF2_x1[,i],col='blue')
lines(DF3_x1[,i],col='green')
}
head(DF1_x1)
for(i in 1:dim(DF1_x1)[2]){
plot(DF1_x1[,i],type='l',ylab=colnames(DF1_x1)[i],main=colnames(DF1_x1)[i])
lines(DF2_x1[,i],col='blue')
lines(DF3_x1[,i],col='green')
}
# C
dim(data)
data_101to150= data[101:150,]
head(data_101to150)
summarize(data)
summary(data)
summary(data_101to150)
dataList_101to150= list(
x= data_101to150[,1:2],
y= data_101to150[,3],
Ntotal= dim(data_101to150)[1],
Npred= dim(x)[2]
)
# Both predictors
dataList_101to150= list(
x= data_101to150[,1:2],
y= data_101to150[,3],
Ntotal= dim(data_101to150)[1],
Npred= dim(x)[2]
)
jagMod_101to150= jags.model(file= textConnection(modStr),data=dataList_101to150,n.chains=3)
cS_101to150= coda.samples(model=jagMod_101to150,variable.names=c('beta0','beta','sigma','nu'),
n.iter=10000)
DF1_101to150= data.frame(cS_101to150[[1]])
DF2_101to150= data.frame(cS_101to150[[2]])
DF3_101to150= data.frame(cS_101to150[[3]])
for(i in 1:dim(DF1_101to150)[2]){
plot(DF1_101to150[,i],type='l',ylab=colnames(DF1_101to150)[i],main=colnames(DF1_101to150)[i])
lines(DF2_101to150[,i],col='blue')
lines(DF3_101to150[,i],col='green')
}
colnames(DF1_101to150)
dataList_101to150
x
dataList_101to150$x
# Both predictors
dataList_101to150= list(
x= data_101to150[,1:2],
y= data_101to150[,3],
Ntotal= dim(data_101to150)[1],
Npred= dim(dataList_101to150$x)[2]
)
jagMod_101to150= jags.model(file= textConnection(modStr),data=dataList_101to150,n.chains=3)
cS_101to150= coda.samples(model=jagMod_101to150,variable.names=c('beta0','beta','sigma','nu'),
n.iter=10000)
DF1_101to150= data.frame(cS_101to150[[1]])
DF2_101to150= data.frame(cS_101to150[[2]])
DF3_101to150= data.frame(cS_101to150[[3]])
for(i in 1:dim(DF1_101to150)[2]){
plot(DF1_101to150[,i],type='l',ylab=colnames(DF1_101to150)[i],main=colnames(DF1_101to150)[i])
lines(DF2_101to150[,i],col='blue')
lines(DF3_101to150[,i],col='green')
}
jagMod_101to150_x1= jags.model(file= textConnection(modStr),data=dataList_101to150_x1,n.chains=3)
# Only x1 as predictor
dataList_101to150_x1= list(
x= data.frame(data_101to150[,1]),
y= data_101to150[,3],
Ntotal= dim(data_101to150)[1],
Npred= dim(dataList_101to150$x)[2]
)
jagMod_101to150_x1= jags.model(file= textConnection(modStr),data=dataList_101to150_x1,n.chains=3)
dim(dataList_101to150$x)[2]
# Only x1 as predictor
dataList_101to150_x1= list(
x= data.frame(data_101to150[,1]),
y= data_101to150[,3],
Ntotal= dim(data_101to150)[1],
Npred= dim(dataList_101to150_x1$x)[2]
)
jagMod_101to150_x1= jags.model(file= textConnection(modStr),data=dataList_101to150_x1,n.chains=3)
cS_101to150_x1= coda.samples(model=jagMod_101to150_x1,variable.names=c('beta0','beta','sigma','nu'),
n.iter=10000)
DF1_101to150_x1= data.frame(cS_101to150_x1[[1]])
DF2_101to150_x1= data.frame(cS_101to150_x1[[2]])
DF3_101to150_x1= data.frame(cS_101to150_x1[[3]])
for(i in 1:dim(DF1_101to150_x1)[2]){
plot(DF1_101to150_x1[,i],type='l',ylab=colnames(DF1_101to150_x1)[i],
main=colnames(DF1_101to150_x1)[i])
lines(DF2_101to150_x1[,i],col='blue')
lines(DF3_101to150_x1[,i],col='green')
}
plot(density(DF1_101to150_x1[,i]))
lines(density(DF2_101to150_x1[,i]),col='blue')
plot(density(DF1_101to150_x1[,i]),main=colnames(DF1_101to150_x1)[i])
lines(density(DF2_101to150_x1[,i]),col='blue')
lines(density(DF3_101to150_x1[,i]),col='green')
for(i in 1:dim(DF1_101to150_x1)[2]){
plot(DF1_101to150_x1[,i],type='l',ylab=colnames(DF1_101to150_x1)[i],
main=colnames(DF1_101to150_x1)[i])
lines(DF2_101to150_x1[,i],col='blue')
lines(DF3_101to150_x1[,i],col='green')
plot(density(DF1_101to150_x1[,i]),main=colnames(DF1_101to150_x1)[i])
lines(density(DF2_101to150_x1[,i]),col='blue')
lines(density(DF3_101to150_x1[,i]),col='green')
}
for(i in 1:dim(DF1_101to150)[2]){
plot(DF1_101to150[,i],type='l',ylab=colnames(DF1_101to150)[i],main=colnames(DF1_101to150)[i])
lines(DF2_101to150[,i],col='blue')
lines(DF3_101to150[,i],col='green')
plot(density(DF1_101to150[,i]),main=colnames(DF1_101to150)[i])
lines(density(DF2_101to150[,i]),col='blue')
lines(density(DF3_101to150[,i]),col='green')
}
3/7
log(3/7)
?logis
?logit
return(y)
logis= function(x){
y= 1/(1+exp(-x))
return(y)
}
logis(1)
logis(2)
logis(-2)
